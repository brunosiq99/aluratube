AULA 1 ------------------------------------------------------------------------------------
---------------- starting ----------------

npm install next react react-dom

---------------- Running ----------------
-- All scripts are located at package.json
npm run dev




---------------- styled-components ----------------
https://github.com/vercel/next.js/tree/canary/examples/with-styled-components

npm install --save styled-components

copy and paste the file next.config.js to the root of the project

Then import styled

---------------- Publishing in Vercel ----------------
git init
npx gitignore node          // Ignora Arquivos temporários desnecessários a pblicação
git add .
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/brunosiq99/aluratube.git
git push -u origin main



AULA 2 ------------------------------------------------------------------------------------------------------------
links inmportantes
https://techguide.sh/
https://babeljs.io/

Conceitos - SPA
*  Um aplicativo de página única (SPA - single-page application) é uma aplicação web ou site que interage com o usuário reescrevendo dinamicamente a página web atual com novos dados do servidor web, em vez do método padrão de um navegador que carrega novas páginas inteiras. O objetivo são transições mais rápidas, que tornam o site mais parecido com uma aplicação nativa.
  - Entender o que é uma SPA
  - Estabelecer rotas para outras páginas
  - Conhecer frameworks SPA
  - Comunicação com APIs



AULA 3 ------------------------------------------------------------------------------------------------------
  - Com o que aprendemos, é possivel implementar o darkMode, porém é trabalhoso ficar passando a prop theme para todos componentes.
  - O next permite criar um arquivo com as pageProps comuns
https://nextjs.org/docs/advanced-features/custom-app
  - THemeProvider 
https://styled-components.com/docs/advanced

AULA 4 -----------------------------------------------------------------------------------------------------
  - Desafio: capturar dinamicamente, através da url, a thumb do vídeo e exibir uma prévia da imagem no card de registro.